<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lee.mapper.BookMapper">
  <resultMap id="BaseResultMap" type="com.lee.entity.Book">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="bookcode" jdbcType="VARCHAR" property="bookcode" />
    <result column="bookname" jdbcType="VARCHAR" property="bookname" />
    <result column="booktype" jdbcType="VARCHAR" property="booktype" />
    <result column="rangetype" jdbcType="VARCHAR" property="rangetype" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="publisher" jdbcType="VARCHAR" property="publisher" />
    <result column="publishdate" jdbcType="DATE" property="publishdate" />
    <result column="language" jdbcType="VARCHAR" property="language" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="removed" jdbcType="INTEGER" property="removed" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bookcode, bookname, booktype, rangetype, author, publisher, publishdate, language, 
    price, createtime, removed
  </sql>
  <select id="selectByExample" parameterType="com.lee.entity.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lee.entity.BookExample">
    delete from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lee.entity.Book">
    insert into book (id, bookcode, bookname, 
      booktype, rangetype, author, 
      publisher, publishdate, language, 
      price, createtime, removed
      )
    values (#{id,jdbcType=INTEGER}, #{bookcode,jdbcType=VARCHAR}, #{bookname,jdbcType=VARCHAR}, 
      #{booktype,jdbcType=VARCHAR}, #{rangetype,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{publisher,jdbcType=VARCHAR}, #{publishdate,jdbcType=DATE}, #{language,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{createtime,jdbcType=TIMESTAMP}, #{removed,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lee.entity.Book">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookcode != null">
        bookcode,
      </if>
      <if test="bookname != null">
        bookname,
      </if>
      <if test="booktype != null">
        booktype,
      </if>
      <if test="rangetype != null">
        rangetype,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="publisher != null">
        publisher,
      </if>
      <if test="publishdate != null">
        publishdate,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="removed != null">
        removed,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bookcode != null">
        #{bookcode,jdbcType=VARCHAR},
      </if>
      <if test="bookname != null">
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="booktype != null">
        #{booktype,jdbcType=VARCHAR},
      </if>
      <if test="rangetype != null">
        #{rangetype,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="publishdate != null">
        #{publishdate,jdbcType=DATE},
      </if>
      <if test="language != null">
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="removed != null">
        #{removed,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lee.entity.BookExample" resultType="java.lang.Long">
    select count(*) from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bookcode != null">
        bookcode = #{record.bookcode,jdbcType=VARCHAR},
      </if>
      <if test="record.bookname != null">
        bookname = #{record.bookname,jdbcType=VARCHAR},
      </if>
      <if test="record.booktype != null">
        booktype = #{record.booktype,jdbcType=VARCHAR},
      </if>
      <if test="record.rangetype != null">
        rangetype = #{record.rangetype,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.publisher != null">
        publisher = #{record.publisher,jdbcType=VARCHAR},
      </if>
      <if test="record.publishdate != null">
        publishdate = #{record.publishdate,jdbcType=DATE},
      </if>
      <if test="record.language != null">
        language = #{record.language,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.removed != null">
        removed = #{record.removed,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book
    set id = #{record.id,jdbcType=INTEGER},
      bookcode = #{record.bookcode,jdbcType=VARCHAR},
      bookname = #{record.bookname,jdbcType=VARCHAR},
      booktype = #{record.booktype,jdbcType=VARCHAR},
      rangetype = #{record.rangetype,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      publisher = #{record.publisher,jdbcType=VARCHAR},
      publishdate = #{record.publishdate,jdbcType=DATE},
      language = #{record.language,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      removed = #{record.removed,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lee.entity.Book">
    update book
    <set>
      <if test="bookcode != null">
        bookcode = #{bookcode,jdbcType=VARCHAR},
      </if>
      <if test="bookname != null">
        bookname = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="booktype != null">
        booktype = #{booktype,jdbcType=VARCHAR},
      </if>
      <if test="rangetype != null">
        rangetype = #{rangetype,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="publishdate != null">
        publishdate = #{publishdate,jdbcType=DATE},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="removed != null">
        removed = #{removed,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lee.entity.Book">
    update book
    set bookcode = #{bookcode,jdbcType=VARCHAR},
      bookname = #{bookname,jdbcType=VARCHAR},
      booktype = #{booktype,jdbcType=VARCHAR},
      rangetype = #{rangetype,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      publishdate = #{publishdate,jdbcType=DATE},
      language = #{language,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      removed = #{removed,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>